#define the required services
services:
  traefik:
    image: traefik:2.4
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik_dashboard_router.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik_dashboard_router.service=traefik_dashboard_service
      - traefik.http.services.traefik_dashboard_service.loadbalancer.server.port=8080
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        aliases:
          # Required so that the web application is able to call the same endpoint
          # from both the browser and the server.
          - "$API_SUBDOMAIN.$DOMAIN"
  webapp:
    build: ./webapp
    labels:
      - traefik.enable=true
      - traefik.http.routers.webapp_router.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.webapp_router.service=webapp_service
      - traefik.http.services.webapp_service.loadbalancer.server.port=3000
    expose:
      - "3000:3000"
    command: pnpm run dev
    environment:
      # Docker image.
      # ---------------------
      STARTUP_COMMAND_1: "pnpm install"
    volumes:
      - ./webapp:/usr/src/app
  api:
    build: ./api
    labels:
      - traefik.enable=true
      - traefik.http.routers.api_router.rule=Host(`$API_SUBDOMAIN.$DOMAIN`)
    ports:
      - "8080:8080"
    networks:
      default:
        aliases:
          # Required so that the web application is able to call the same endpoint
          # from both the browser and the server.
          - "$API_SUBDOMAIN.$DOMAIN"

networks:
  default:
    name: gin-go-boilerplate